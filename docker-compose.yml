version: '3.8'

services:
  database:
    image: postgres:latest
    container_name: powerbrake-database
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: powerbrake-redis
    ports:
      - '6379:6379'
    command: ['redis-server', '--appendonly', 'yes']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: powerbrake-app
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     NODE_ENV: production
  #     APP_PORT: 3000
  #     DATABASE_URL: postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
  #     REDIS_URL: redis://redis:6379
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy

  # app_local:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: powerbrake-app-local
  #   ports:
  #     - '3333:3000'
  #   environment:
  #     NODE_ENV: development
  #     APP_PORT: 3000
  #     DATABASE_URL: postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
  #     REDIS_URL: redis://redis:6379
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '1.0'
  #         memory: 512M
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
