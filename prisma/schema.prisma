generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN // Full access
  MANAGER // Manager
  SUPERVISOR // Reports and supervision
  OPERATOR // Basic operations
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String   @map("password_hash")
  role         Role     @default(OPERATOR)
  isActive     Boolean  @default(true) @map("is_active")
  avatarId     String?  @unique @map("avatar_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  avatar    Avatar?   @relation(fields: [avatarId], references: [id])
  addresses Address[]

  @@map("users")
}

model Avatar {
  id       String  @id @default(uuid())
  title    String
  url      String
  userId   String? @map("user_id")
  clientId String? @map("client_id")

  user   User?
  client Client?

  @@map("avatars")
}

model Address {
  id           String   @id @default(uuid())
  street       String
  number       String
  complement   String?
  neighborhood String
  city         String
  state        String
  zipCode      String   @map("zip_code")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  userId   String? @map("user_id")
  clientId String? @map("client_id")

  user   User?   @relation(fields: [userId], references: [id])
  client Client? @relation(fields: [clientId], references: [id])

  @@map("address")
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  avatarId String? @unique @map("avatar_id")

  addresses Address[]
  avatar    Avatar?   @relation(fields: [avatarId], references: [id])

  @@map("clients")
}

enum ActorType {
  USER
  CLIENT
}

model AuditLog {
  id        String    @id @default(uuid())
  actorId   String    @map("actor_id")
  actorType ActorType @map("actor_type")
  action    String
  entity    String
  entityId  String    @map("entity_id")
  changes   Json?
  createdAt DateTime  @default(now()) @map("created_at")

  @@index([actorId])
  @@index([entity, entityId])
  @@map("audit_logs")
}
